version: '3.9'

services:
  ### BUILDER
  ###
  nx-builder:
    build:
      context: .
      dockerfile: Dockerfile.builder
    command: ['nx', 'run-many', '--target=build', '--parallel', '--watch']
    environment:
      - DATABASE_URL=postgres://beef:changeme@database:5432/beefme
    volumes:
      - app_dist:/builder/dist
      - modules:/builder/node_modules
      - ./package.json:/builder/package.json
      - ./nx.json:/builder/nx.json
      - ./tsconfig.base.json:/builder/tsconfig.base.json
      - ./apps:/builder/apps
      - ./libs:/builder/libs
      - ./tools:/builder/tools

  ### BROKER
  ###

  kafka:
    image: docker.io/bitnami/kafka:3.3
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  ### DATA LAYER
  ###

  database:
    image: postgres:15.1
    environment:
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=beef
      - POSTGRES_DB=beefme
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./data/database:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./data/mongo:/data/db

  ### SERVICE LAYER
  ###

  api:
    build:
      context: .
      dockerfile: ./Dockerfile.runner
      args:
        SERVICE_NAME: api
    ports:
      - '3000:3000'
    working_dir: /app
    environment:
      - SERVICE_NAME=api
    command: ['nodemon', '--exec', 'node', '/app/dist/apps/api/main.js']
    volumes:
      - app_dist:/app/dist:ro
      - modules:/app/node_modules:ro
    depends_on:
      - nx-builder
      - database
      - kafka
      - zookeeper

  domain:
    build:
      context: .
      dockerfile: ./Dockerfile.runner
      args:
        SERVICE_NAME: domain
    ports:
      - '3002:3000'
    working_dir: /app
    environment:
      - DATABASE_URL=postgres://beef:changeme@database:5432/beefme
      - SERVICE_NAME=domain
    command: ['nodemon', '--exec', 'node', '/app/dist/apps/domain/main.js']
    volumes:
      - app_dist:/app/dist:ro
      - modules:/app/node_modules:ro
    depends_on:
      - nx-builder
      - database
      - kafka
      - zookeeper

  feed-consumer:
    build:
      context: .
      dockerfile: ./Dockerfile.runner
      args:
        SERVICE_NAME: feed-consumer
    ports:
      - '3001:3000'
    working_dir: /app
    environment:
      - SERVICE_NAME=feed-consumer
    command:
      ['nodemon', '--exec', 'node', '/app/dist/apps/feed-consumer/main.js']
    volumes:
      - app_dist:/app/dist:ro
      - modules:/app/node_modules:ro
    depends_on:
      - nx-builder
      - database
      - kafka
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  modules:
  app_dist:
